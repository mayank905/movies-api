let pg=require('pg');
let fs = require('fs');
let arrayobj = JSON.parse(fs.readFileSync('./data.txt', 'utf8'));
// console.log(arrayobj[0])
let movies=[]
let directors=[]
for(let i=0;i<arrayobj.length;i++){
    let entry=[]
    for(let j in arrayobj[i]){
        let value=arrayobj[i][j]
        entry.push(value)
    }
    let value=arrayobj[i].Director
    directors.push(value)
    movies.push(entry)
}
directors=[...new Set(directors)]
// console.log(directors.length)
// console.log(movies.length)


const connectionString = "postgres://mayank:mayank@localhost:5432/api";
let pgClient = new pg.Client(connectionString);

//createTable()

async function createTable()
{await pgClient.connect();

//let query = await pgClient.query("SELECT * FROM users");
    const createTableDirectors="create table  IF NOT EXISTS directors(id int primary key GENERATED BY DEFAULT AS IDENTITY, name varchar(30))"
    const createTableMovies="CREATE TABLE IF NOT EXISTS movies(id  int primary key GENERATED BY DEFAULT AS IDENTITY, title varchar(50), description varchar(300), runtime int, genre varchar(20), rating float, metascore varchar(20), votes INT, gross_earning_in_mil varchar(20), director_id int REFERENCES directors(id) NOT NULL, actor varchar(30), year int);"
    let delteQuery=await pgClient.query("drop table directors,movies")
    let createQuery1=await pgClient.query(createTableDirectors)
    let createQuery2=await pgClient.query(createTableMovies)
//let insertQuery1 = await pgClient.
    await insert()

    await pgClient.end();}


async function insert(){

    let insertDirectors='INSERT INTO directors(name) VALUES($1)'
    for(let i=0;i<directors.length;i++){

        let values = [directors[i]]
        let insertQuery=await pgClient.query(insertDirectors,values)
    }
    let insertMovies="INSERT INTO movies(title,description,runtime,genre,rating,metascore,votes,gross_earning_in_mil,director_id,actor,year) VALUES($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11)"

    for(let j=0;j<movies.length;j++){
        //     let retrieveID="Select id from directors where name=$1";
        //
        //     let retrieveQuery=await pgClient.query(retrieveID,[movies[j][10]])
        //     // console.log(retrieveQuery)
        //     movies[j][10]=retrieveQuery.rows
        //     console.log(directors[j])
        //     // console.log(movies[j][10])
        console.log(movies[j][9])
        let k
        for( k=0; k<directors.length; k++){

            // console.log(directors[k])
            if(directors[k] === movies[j][9]){
                console.log(k)
                break
            }
        }


        let values=movies[j].slice(1)
        values.splice(8,1,k+1)
        console.log(values)
        let insertQuery =await pgClient.query(insertMovies,values)

    }

}

module.exports = {
    createTable
}
